# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
on: 
  workflow_dispatch:

jobs:
#  startawsec2:
#    runs-on: ubuntu-latest
#    steps:
#      - name: startec2
#        run: |
#          aws ec2 start-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }} 
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
#  sleep-ec2:
#    needs: startawsec2
#    runs-on: ubuntu-latest
#    steps:
#      - name: waiting ec2 to start
      
 #       run: |
 #         sleep 60
          
  checkec2status:
#    needs: sleep-ec2
    runs-on: ubuntu-latest
    steps:
      - name: checking status of ec2
        run: |
          status=$( aws ec2 describe-instance-status --instance-id ${{secrets.AWS_EC2_INSTANCE_ID }} | jq -r '.InstanceStatuses[] | .InstanceState | .Name' )
          echo "STATUS=$status"
      
        env:
           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          
  teststatus:
    needs: checkec2status
    runs-on: ubuntu-latest
    if: ${{ status != "running"}}
    steps:
      - run: exit1
    
#  stopawsec2:
#    needs: checkec2status
#    runs-on: ubuntu-latest
#    steps:
#      - name: stopec2
#        run: |
#          aws ec2 stop-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }}
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}  
         
             
   
           
  
      
  
    
